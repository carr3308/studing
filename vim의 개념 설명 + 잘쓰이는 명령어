1. Vim의 기본 개념
모드 (Modes)
Vim은 3가지 주요 모드로 작동합니다:
명령 모드 (Normal Mode): 기본 모드로, 텍스트를 편집하지 않고 명령을 실행합니다. Vim을 열면 기본적으로 이 모드입니다.
입력 모드 (Insert Mode): 텍스트를 편집할 수 있는 모드입니다. 명령 모드에서 i를 눌러 입력 모드로 전환합니다.
비주얼 모드 (Visual Mode): 텍스트 블록을 선택할 수 있는 모드입니다. 명령 모드에서 v를 눌러 비주얼 모드로 전환합니다.
파일 다루기
파일 열기: 터미널에서 vim filename을 입력합니다.
파일 저장: 명령 모드에서 :w를 입력합니다.
저장 후 종료: :wq 또는 :x를 입력합니다.
저장하지 않고 종료: :q!를 입력합니다.
2. 기본 명령어
2.1 커서 이동
h, j, k, l: 왼쪽, 아래, 위, 오른쪽으로 이동합니다. (이동할 때 화살표 키를 사용할 수도 있지만, 손을 키보드 홈 포지션에 유지하기 위해 hjkl을 사용하는 것이 좋습니다.)
0: 현재 줄의 맨 앞으로 이동합니다.
$: 현재 줄의 맨 끝으로 이동합니다.
gg: 파일의 맨 처음으로 이동합니다.
G: 파일의 맨 끝으로 이동합니다.
w: 다음 단어의 시작으로 이동합니다.
b: 이전 단어의 시작으로 이동합니다.
2.2 텍스트 편집
i: 커서 앞에서 입력 모드로 전환합니다.
a: 커서 뒤에서 입력 모드로 전환합니다.
o: 커서 아래에 새로운 줄을 삽입하고 입력 모드로 전환합니다.
dd: 현재 줄을 삭제합니다.
yy: 현재 줄을 복사합니다.
p: 복사하거나 삭제한 텍스트를 붙여넣습니다.
u: 마지막 명령을 취소(undo)합니다.
Ctrl + r: 취소했던 명령을 다시 실행(redo)합니다.
r: 커서 위치의 문자를 대체합니다.
2.3 비주얼 모드
v: 비주얼 모드를 시작합니다. 커서 이동 키로 블록을 선택할 수 있습니다.
V: 줄 단위로 선택합니다.
y: 선택한 텍스트를 복사합니다.
d: 선택한 텍스트를 삭제합니다.
2.4 검색 및 치환
/텍스트: 파일 내에서 텍스트를 검색합니다. 검색 결과 사이를 n과 N으로 이동할 수 있습니다.
/old/new: 현재 줄에서 old를 new로 치환합니다.
:%s/old/new/g: 파일 전체에서 old를 new로 모두 치환합니다.
3. 유용한 명령어와 팁
명령어 반복
.: 직전에 실행한 명령을 반복합니다. 예를 들어, dw(단어 삭제) 후 .를 누르면 다음 단어가 삭제됩니다.
멀티 레벨 취소와 다시 실행
Vim에서는 여러 번의 u를 통해 여러 단계의 취소가 가능합니다. Ctrl + r을 사용해 다시 실행할 수도 있습니다.
파일 탐색
filename: 다른 파일을 엽니다.
또는 :bn: 다음 버퍼(열린 파일)로 이동합니다.
또는 :bp: 이전 버퍼로 이동합니다.
: 현재 열려 있는 모든 버퍼(파일)를 나열합니다.
4. 커스터마이징 (기본 설정)
Vim을 더욱 강력하게 만들기 위해 .vimrc 파일을 사용해 설정을 커스터마이징할 수 있습니다. 예를 들어:
set number          " 줄 번호를 표시
set relativenumber  " 상대적인 줄 번호를 표시
set tabstop=4       " 탭을 4칸으로 설정
set expandtab       " 탭을 스페이스로 변환
set shiftwidth=4    " 자동 들여쓰기를 4칸으로 설정
set autoindent      " 자동 들여쓰기
syntax on           " 구문 강조
5. 마무리
Vim은 처음에는 어렵게 느껴질 수 있지만, 기본적인 명령어와 개념을 익히고 나면 매우 강력한 도구가 됩니다. 천천히 익히면서 자신에게 필요한 기능들을 하나씩 추가해 나가는 것이 좋습니다. Vim의 숙련도는 생산성으로 직결되므로 시간을 투자할 가치가 충분합니다.
